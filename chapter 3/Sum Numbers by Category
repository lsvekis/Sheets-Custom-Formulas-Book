/**
 * Sums numbers for each category specified in the input data.
 *
 * @param {range} categories The range containing categories.
 * @param {range} amounts The range containing amounts corresponding to each category.
 * @return {array|string} An array with categories and their total sums, or an error message if input data is invalid.
 * @customfunction
 */
function SUM_BY_CATEGORY(categories, amounts) {
 const sums = {};
 
for (let i = 0; i < categories.length; i++) {
 const category = categories[i][0];
 const amount = amounts[i][0];
 
 if (typeof category === 'string' && typeof amount === 'number') {
 sums[category] = (sums[category] || 0) + amount;
 }
 }
 
 const result = Object.entries(sums).map(([category, total]) => [category, total]);
 return result.length > 0 ? result : "No valid data!";
}
